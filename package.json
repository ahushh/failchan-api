{
  "name": "failchan-api",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "start": "nodemon",
    "start:cli": "NODE_ENV=production node dist/src/cli.js",
    "start:cli:dev": "NODE_ENV=development ts-node src/cli.ts",
    "start:dev": "NODE_ENV=development ts-node src/index.ts",
    "start:test": "NODE_ENV=test ts-node src/index.ts",
    "start:prod": "NODE_ENV=production node dist/src/index.js",
    "docker": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml",
    "docker:start": "npm run docker -- up",
    "docker:stop": "npm run docker -- down",
    "lint": "tslint --project . -c tslint.json",
    "lint:fix": "npm run lint -- --fix",
    "clean": "rm -fr dist",
    "build": "npm run clean && tsc",
    "typeorm": "ts-node ./node_modules/.bin/typeorm",
    "db:start": "docker-compose up -d",
    "db:stop": "docker-compose down",
    "test": "NODE_ENV=test ALLOW_CONFIG_MUTATION=true mocha --opts src/__e2e__/mocha.opts 'src/**/*.test.ts'",
    "e2e:one": "NODE_ENV=test ALLOW_CONFIG_MUTATIONS=true mocha --opts src/__e2e__/mocha.opts",
    "e2e": "NODE_ENV=test ALLOW_CONFIG_MUTATIONS=true mocha --opts src/__e2e__/mocha.opts 'src/__e2e__/integration/**/*.ts'",
    "e2e:coverage": "NODE_ENV=test nyc mocha --opts src/__e2e__/mocha.opts 'src/__e2e__/integration/**/*.ts'",
    "e2e:db:create": "docker-compose exec -T postgres createdb -Upostgres test",
    "e2e:db:drop": "docker-compose exec -T postgres dropdb -Upostgres test",
    "e2e:db:reset": "npm run e2e:db:drop && npm run e2e:db:create",
    "release-patch": "npm version patch -m 'chore(*): patch version'",
    "release-minor": "npm version minor -m 'chore(*): minor version'",
    "release-major": "npm version major -m 'chore(*): major version'",
    "release-prerelease": "npm version prerelease -m 'chore(*): prerelease version'",
    "preversion": "git fetch --tags && git checkout master",
    "postversion": "git push origin master && git push --tags"
  },
  "dependencies": {
    "@hapi/joi": "^17.1.0",
    "@types/aws-sdk": "^2.7.0",
    "@types/body-parser": "^1.17.0",
    "@types/express": "^4.16.0",
    "@types/lodash": "^4.14.116",
    "@types/node": "^10.11.5",
    "aws-sdk": "^2.814.0",
    "chai": "^4.2.0",
    "class-transformer": "^0.1.10",
    "config": "^3.3.0",
    "cookie-parser": "~1.4.3",
    "debug": "~2.6.9",
    "dist-exiftool": "^10.53.0",
    "express": "~4.16.0",
    "fp-ts": "^2.2.0",
    "glob": "^7.1.3",
    "inversify": "^5.0.1",
    "inversify-binding-decorators": "^4.0.0",
    "inversify-express-utils": "^6.3.2",
    "ioredis": "^4.2.0",
    "json-beautify": "^1.1.1",
    "jsonwebtoken": "^8.5.1",
    "md5": "^2.2.1",
    "mocha": "^5.2.0",
    "morgan": "~1.9.0",
    "multer": "^1.4.1",
    "node-exiftool": "^2.3.0",
    "nodemon": "^1.18.4",
    "pg": "^7.5.0",
    "ramda": "^0.25.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^2.6.2",
    "sharp": "^0.23.4",
    "supertest": "^3.3.0",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "typedi": "^0.8.0",
    "typeorm": "^0.2.7",
    "typescript": "^3.1.1",
    "uuid": "^3.3.2"
  },
  "devDependencies": {
    "@types/chai": "^4.1.6",
    "@types/config": "0.0.36",
    "@types/hapi__joi": "^16.0.12",
    "@types/ioredis": "^4.0.3",
    "@types/mocha": "^5.2.5",
    "@types/multer": "^1.3.7",
    "@types/ramda": "^0.25.39",
    "@types/redis": "^2.8.7",
    "@types/rimraf": "^2.0.2",
    "@types/sharp": "^0.23.0",
    "@types/uuid": "^3.4.4",
    "husky": "^1.1.3",
    "nyc": "^13.1.0",
    "source-map-support": "^0.5.9",
    "tslint-config-airbnb": "^5.11.0"
  },
  "nyc": {
    "extension": [
      ".ts",
      ".tsx"
    ],
    "exclude": [
      "**/*.d.ts",
      "dist"
    ],
    "reporter": [
      "text"
    ],
    "all": true
  }
}
